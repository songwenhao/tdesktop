commit 92442c305096abf2773386ce67f24ceafa767e08
Author: Hodong Kim <hodong@nimfsoft.com>
Date:   Tue Apr 28 23:40:19 2020 +0900

    2020.04.28

diff --git a/README b/README
index 58c2691..4ec31ec 100644
--- a/README
+++ b/README
@@ -17,7 +17,7 @@ Nimf provides:
     * Preedit window
     * Candidate
   * Client Modules:
-    * GTK+2, GTK+3, Qt4, Qt5
+    * GTK+2, GTK+3, Qt5
   * Settings tool to configure the Nimf:
     * nimf-settings
   * Development files:
@@ -131,10 +131,10 @@ Compiling and installing
     sudo yum install epel-release
 
     sudo yum install gcc-c++ libtool glib2-devel pkgconfig intltool \
-      gtk3-devel gtk2-devel qt4-devel qt5-qtbase-devel \
-      qt5-qtbase-private-devel libappindicator-gtk3-devel librsvg2-tools \
-      google-noto-cjk-fonts libhangul-devel anthy-devel anthy \
-      libxkbcommon-devel wayland-devel libxklavier-devel gtk-doc
+      gtk3-devel gtk2-devel qt5-qtbase-devel qt5-qtbase-private-devel \
+      libappindicator-gtk3-devel librsvg2-tools google-noto-cjk-fonts \
+      libhangul-devel anthy-devel anthy libxkbcommon-devel wayland-devel \
+      libxklavier-devel gtk-doc
 
     rpmbuild -bb nimf-master/nimf.spec
     ls -R rpmbuild/RPMS/
@@ -215,7 +215,7 @@ Debugging
   tail -f /var/log/daemon.log # or /var/log/syslog
 
   export GTK_IM_MODULE="nimf"
-  export QT4_IM_MODULE="nimf"
+  export QT4_IM_MODULE="xim"
   export QT_IM_MODULE="nimf"
   export XMODIFIERS="@im=nimf"
   export G_MESSAGES_DEBUG=nimf
diff --git a/archlinux/PKGBUILD b/archlinux/PKGBUILD
index 638ce58..c28c8c7 100644
--- a/archlinux/PKGBUILD
+++ b/archlinux/PKGBUILD
@@ -1,7 +1,7 @@
 #
 # PKGBUILD
 # This file is part of Nimf.
-#
+# Author: Hodong Kim
 # Unlike other files in the Nimf project,
 # this PKGBUILD file is in the public domain.
 
@@ -13,12 +13,12 @@ arch=('any')
 url="https://gitlab.com/nimf-i18n/nimf"
 license=('LGPL3')
 makedepends=('binutils' 'autoconf' 'automake' 'gcc' 'make' 'glib2' 'intltool'
-             'gtk3' 'gtk2' 'qt4' 'qt5-base' 'libappindicator-gtk3' 'librsvg'
+             'gtk3' 'gtk2' 'qt5-base' 'libappindicator-gtk3' 'librsvg'
              'noto-fonts-cjk' 'libhangul' 'anthy' 'librime' 'libxkbcommon'
              'wayland' 'libxklavier' 'm17n-lib' 'm17n-db' 'gtk-doc')
-depends=('glib2' 'gtk3' 'gtk2' 'qt4' 'qt5-base' 'libappindicator-gtk3'
-         'libhangul' 'anthy' 'librime' 'libxkbcommon' 'wayland' 'libxklavier'
-         'm17n-lib' 'm17n-db')
+depends=('glib2' 'gtk3' 'gtk2' 'qt5-base' 'libappindicator-gtk3' 'libhangul'
+         'anthy' 'librime' 'libxkbcommon' 'wayland' 'libxklavier' 'm17n-lib'
+         'm17n-db')
 optdepends=('brise: Rime schema repository'
             'noto-fonts-cjk: Google Noto CJK fonts')
 source=("https://gitlab.com/nimf-i18n/nimf/-/archive/master/nimf-master.tar.bz2")
diff --git a/bin/nimf/nimf.c b/bin/nimf/nimf.c
index 0404c09..d2a6cc4 100644
--- a/bin/nimf/nimf.c
+++ b/bin/nimf/nimf.c
@@ -3,7 +3,7 @@
  * nimf.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2015-2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2015-2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -33,13 +33,14 @@
 #include <syslog.h>
 #include <errno.h>
 #include <glib-unix.h>
+#include "nimf-utils-private.h"
 
 static gchar *
 nimf_get_nimf_path ()
 {
   g_debug (G_STRLOC ": %s", G_STRFUNC);
 
-  return g_strconcat (g_get_user_runtime_dir (), "/nimf", NULL);
+  return g_strdup_printf ("/run/user/%u/nimf", nimf_get_loginuid ());
 }
 
 static gboolean
@@ -66,7 +67,7 @@ nimf_get_lock_path ()
 {
   g_debug (G_STRLOC ": %s", G_STRFUNC);
 
-  return g_strconcat (g_get_user_runtime_dir (), "/nimf/lock.pid", NULL);
+  return g_strdup_printf ("/run/user/%u/nimf/lock.pid", nimf_get_loginuid ());
 }
 
 static int
diff --git a/configure.ac b/configure.ac
index a969a44..69bbc8d 100644
--- a/configure.ac
+++ b/configure.ac
@@ -1,6 +1,6 @@
 dnl Process this file with autoconf to produce a configure script.
 
-AC_INIT(nimf, 2019.08.14)
+AC_INIT(nimf, 2020.04.28)
 
 AC_CONFIG_HEADERS([config.h])
 AC_CONFIG_MACRO_DIR([m4])
@@ -113,13 +113,9 @@ AS_IF([test "x$enable_nimf_anthy" != "xno" -a "x$HAVE_ANTHY_DIC" != "xyes"],
 AM_CONDITIONAL([ENABLE_NIMF_ANTHY], [test "x$enable_nimf_anthy" != "xno"])
 
 dnl ***************************************************************************
-dnl im-nimf-qt4  im-nimf-qt5
+dnl im-nimf-qt5
 dnl ***************************************************************************
 
-PKG_CHECK_MODULES(IM_NIMF_QT4_DEPS, [QtGui], [],
-  [AC_MSG_ERROR([No package 'QtGui' found.
-  If you are using Debian, please install 'libqt4-dev'.])])
-
 PKG_CHECK_MODULES(IM_NIMF_QT5_DEPS, [Qt5Core Qt5Gui Qt5Widgets], [],
   [AC_MSG_ERROR([Package requirements (Qt5Core Qt5Gui Qt5Widgets) were not met:
   If you are using Debian, please install 'qtbase5-dev'.])])
@@ -310,7 +306,6 @@ AC_OUTPUT([
   modules/Makefile
   modules/clients/Makefile
   modules/clients/gtk/Makefile
-  modules/clients/qt4/Makefile
   modules/clients/qt5/Makefile
   modules/engines/Makefile
   modules/engines/nimf-anthy/Makefile
diff --git a/data/im-config/23_nimf.rc b/data/im-config/23_nimf.rc
index 2063e51..e18a1af 100644
--- a/data/im-config/23_nimf.rc
+++ b/data/im-config/23_nimf.rc
@@ -5,7 +5,7 @@ fi
 if [ "$IM_CONFIG_PHASE" = 1 ]; then
     XMODIFIERS="@im=nimf"
     GTK_IM_MODULE=nimf
-    QT4_IM_MODULE=nimf
+    QT4_IM_MODULE=xim
     QT_IM_MODULE=nimf
     CLUTTER_IM_MODULE=xim
 fi
diff --git a/data/nimf.conf b/data/nimf.conf
index 05be33a..a495e94 100644
--- a/data/nimf.conf
+++ b/data/nimf.conf
@@ -1,4 +1,4 @@
 GTK_IM_MODULE=nimf
-QT4_IM_MODULE=nimf
+QT4_IM_MODULE=xim
 QT_IM_MODULE=nimf
 XMODIFIERS=@im=nimf
diff --git a/debian/changelog b/debian/changelog
index f147500..dcfa464 100644
--- a/debian/changelog
+++ b/debian/changelog
@@ -1,3 +1,13 @@
+nimf (2020.04.28) stable; urgency=medium
+
+  * Fixed auto-reordering
+  * Fixed errors when typing Hangul with the Dvorak layout.
+  * Fixed wrong path. This prevents nimf from running more than once.
+    Don't use g_get_user_runtime_dir()
+  * Fix an error on compiling im-nimf.c for gtk2
+
+ -- Hodong Kim <nimfsoft@gmail.com>  Tue, 28 Apr 2020 22:14:14 +0900
+
 nimf (2019.08.14) stable; urgency=medium
 
   * Updated README
diff --git a/debian/control b/debian/control
index af19791..e4d38a7 100644
--- a/debian/control
+++ b/debian/control
@@ -10,7 +10,6 @@ Build-Depends: debhelper (>= 9),
                libgtk-3-dev,
                libgtk-3-bin,
                libgtk2.0-dev,
-               libqt4-dev,
                qtbase5-dev,
                qtbase5-private-dev,
                libappindicator3-dev,
diff --git a/debian/nimf.install b/debian/nimf.install
index 4800152..9315aee 100644
--- a/debian/nimf.install
+++ b/debian/nimf.install
@@ -5,7 +5,6 @@ usr/lib/*/gtk-2.0
 usr/lib/*/gtk-3.0
 usr/lib/*/nimf/modules/libnimf-system-keyboard.so
 usr/lib/*/nimf/modules/services
-usr/lib/*/qt4
 usr/lib/*/qt5
 usr/share/applications
 usr/share/glib-2.0/schemas/org.nimf.clients.*
diff --git a/libnimf/nimf-im.c b/libnimf/nimf-im.c
index ca8485b..8b78064 100644
--- a/libnimf/nimf-im.c
+++ b/libnimf/nimf-im.c
@@ -3,7 +3,7 @@
  * nimf-im.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2015-2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2015-2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -20,14 +20,12 @@
  */
 
 #include "nimf-im.h"
-#include <string.h>
 #include "nimf-marshalers-private.h"
 #include "nimf-message-private.h"
-#include <errno.h>
 #include <glib/gstdio.h>
 #include <gio/gunixsocketaddress.h>
 #include "nimf-utils.h"
-#include <stdlib.h>
+#include "nimf-utils-private.h"
 
 enum {
   PREEDIT_START,
@@ -59,31 +57,11 @@ struct _NimfIMPrivate
 
   guint16       id;
   GFileMonitor *monitor;
-  uid_t         uid;
   gboolean      created;
 };
 
 G_DEFINE_TYPE_WITH_PRIVATE (NimfIM, nimf_im, G_TYPE_OBJECT);
 
-static uid_t
-get_login_uid (void)
-{
-  gchar *nptr;
-  gsize  length;
-  uid_t  uid;
-
-  if (!g_file_get_contents ("/proc/self/loginuid", &nptr, &length, NULL))
-    return -1;
-
-  errno = 0;
-  uid = strtol (nptr, NULL, 10);
-
-  if (errno)
-    return -1;
-  else
-    return uid;
-}
-
 static gboolean
 nimf_im_is_connected ()
 {
@@ -283,7 +261,7 @@ nimf_im_connect (NimfIM *im)
     {
       if (g_stat (nimf_im_socket_path, &info) == 0)
       {
-        if (im->priv->uid == info.st_uid)
+        if (nimf_get_loginuid () == info.st_uid)
         {
           if (g_socket_connect (nimf_im_socket, address, NULL, &error))
           {
@@ -616,9 +594,6 @@ nimf_im_init (NimfIM *im)
   static guint16 next_id = 0;
   guint16 id;
 
-  if ((im->priv->uid = get_login_uid ()) == (uid_t) -1)
-    im->priv->uid = getuid ();
-
   if (!nimf_im_socket_path)
     nimf_im_socket_path = nimf_get_socket_path ();
 
diff --git a/libnimf/nimf-utils-private.h b/libnimf/nimf-utils-private.h
index eacb64f..a59ccf4 100644
--- a/libnimf/nimf-utils-private.h
+++ b/libnimf/nimf-utils-private.h
@@ -3,7 +3,7 @@
  * nimf-utils-private.h
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -28,6 +28,8 @@ G_BEGIN_DECLS
 
 gboolean gnome_is_running       (void);
 gboolean gnome_xkb_is_available (void);
+uid_t    nimf_get_loginuid      (void);
+
 G_END_DECLS
 
 #endif /* __NIMF_UTILS_PRIVATE_H__ */
diff --git a/libnimf/nimf-utils.c b/libnimf/nimf-utils.c
index 9717ecc..9738fab 100644
--- a/libnimf/nimf-utils.c
+++ b/libnimf/nimf-utils.c
@@ -3,7 +3,7 @@
  * nimf-utils.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2015-2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2015-2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -22,6 +22,7 @@
 #include "nimf-utils.h"
 #include "nimf-enum-types-private.h"
 #include <gio/gio.h>
+#include <errno.h>
 
 /**
  * SECTION:nimf-utils
@@ -45,6 +46,33 @@ nimf_keyval_to_keysym_name (guint keyval)
   return enum_value ? enum_value->value_nick : NULL;
 }
 
+uid_t
+nimf_get_loginuid (void)
+{
+  gchar *loginuid;
+  static uid_t uid = -1;
+
+  if (uid == (uid_t) -1)
+  {
+    g_file_get_contents ("/proc/self/loginuid", &loginuid, NULL, NULL);
+
+    if (loginuid)
+    {
+      errno = 0;
+      uid = strtol (loginuid, NULL, 10);
+
+      g_free (loginuid);
+
+      if (!errno)
+        return uid;
+    }
+
+    uid = getuid ();
+  }
+
+  return uid;
+}
+
 /**
  * nimf_get_socket_path:
  *
@@ -55,7 +83,7 @@ nimf_get_socket_path ()
 {
   g_debug (G_STRLOC ": %s", G_STRFUNC);
 
-  return g_strconcat (g_get_user_runtime_dir (), "/nimf/socket", NULL);
+  return g_strdup_printf ("/run/user/%u/nimf/socket", nimf_get_loginuid ());
 }
 
 /* private */
diff --git a/modules/clients/Makefile.am b/modules/clients/Makefile.am
index 8957aac..3cb9a22 100644
--- a/modules/clients/Makefile.am
+++ b/modules/clients/Makefile.am
@@ -1,3 +1,3 @@
-SUBDIRS = gtk qt4 qt5
+SUBDIRS = gtk qt5
 
 DISTCLEANFILES = Makefile.in
diff --git a/modules/clients/gtk/Makefile.am b/modules/clients/gtk/Makefile.am
index f7752e2..6d1ca56 100644
--- a/modules/clients/gtk/Makefile.am
+++ b/modules/clients/gtk/Makefile.am
@@ -22,7 +22,8 @@ gtk2_im_moduledir = $(GTK2_LIBDIR)/gtk-2.0/$(GTK2_BINARY_VERSION)/immodules
 gtk2_im_module_LTLIBRARIES = im-nimf-gtk2.la
 
 im_nimf_gtk2_la_SOURCES  = im-nimf.c
-im_nimf_gtk2_la_CFLAGS   = $(IM_NIMF_GTK2_DEPS_CFLAGS) $(AM_CFLAGS)
+im_nimf_gtk2_la_CFLAGS   = $(IM_NIMF_GTK2_DEPS_CFLAGS) $(AM_CFLAGS) \
+                           -Wno-error=deprecated-declarations
 im_nimf_gtk2_la_LDFLAGS  = $(IM_NIMF_GTK2_DEPS_LIBS) -avoid-version -module
 im_nimf_gtk2_la_LIBADD   = $(top_builddir)/libnimf/libnimf.la
 
diff --git a/modules/clients/qt4/Makefile.am b/modules/clients/qt4/Makefile.am
deleted file mode 100644
index 4dbad1c..0000000
--- a/modules/clients/qt4/Makefile.am
+++ /dev/null
@@ -1,35 +0,0 @@
-gsettings_SCHEMAS = org.nimf.clients.qt4.gschema.xml
-@GSETTINGS_RULES@
-
-QT4_LIB_DIR = `pkg-config --variable=libdir       QtCore`
-QT4_MOC     = `pkg-config --variable=moc_location QtCore`
-
-qt4_im_moduledir = $(QT4_LIB_DIR)/qt4/plugins/inputmethods
-qt4_im_module_LTLIBRARIES = libqt4im-nimf.la
-
-BUILT_SOURCES = im-nimf-qt4.moc
-libqt4im_nimf_la_SOURCES = im-nimf-qt4.cpp $(BUILT_SOURCES)
-
-libqt4im_nimf_la_CXXFLAGS = \
-	$(EXTRA_CFLAGS) \
-	$(LIBNIMF_DEPS_CFLAGS) \
-	-I$(top_srcdir)/libnimf \
-	-DG_LOG_DOMAIN=\"nimf\" \
-	$(IM_NIMF_QT4_DEPS_CFLAGS) \
-	-DQT_NO_KEYWORDS
-
-libqt4im_nimf_la_LDFLAGS = -avoid-version -module $(IM_NIMF_QT4_DEPS_LIBS) \
-	                         $(LIBNIMF_DEPS_LIBS)
-libqt4im_nimf_la_LIBADD  = $(top_builddir)/libnimf/libnimf.la
-
-im-nimf-qt4.moc: im-nimf-qt4.cpp
-	$(AM_V_GEN) $(QT4_MOC) im-nimf-qt4.cpp -o im-nimf-qt4.moc
-
-install-data-hook:
-	chmod -x $(DESTDIR)$(qt4_im_moduledir)/libqt4im-nimf.so
-	rm -f    $(DESTDIR)$(qt4_im_moduledir)/libqt4im-nimf.la
-
-uninstall-hook:
-	rm -f    $(DESTDIR)$(qt4_im_moduledir)/libqt4im-nimf.so
-
-DISTCLEANFILES = Makefile.in $(BUILT_SOURCES)
diff --git a/modules/clients/qt4/im-nimf-qt4.cpp b/modules/clients/qt4/im-nimf-qt4.cpp
deleted file mode 100644
index 4864158..0000000
--- a/modules/clients/qt4/im-nimf-qt4.cpp
+++ /dev/null
@@ -1,426 +0,0 @@
-/* -*- Mode: C++; indent-tabs-mode: nil; c-basic-offset: 2; tab-width: 2 -*- */
-/*
- * im-nimf-qt4.cpp
- * This file is part of Nimf.
- *
- * Copyright (C) 2015-2019 Hodong Kim <cogniti@gmail.com>
- *
- * Nimf is free software: you can redistribute it and/or modify it
- * under the terms of the GNU Lesser General Public License as published
- * by the Free Software Foundation, either version 3 of the License, or
- * (at your option) any later version.
- *
- * Nimf is distributed in the hope that it will be useful, but
- * WITHOUT ANY WARRANTY; without even the implied warranty of
- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
- * See the GNU Lesser General Public License for more details.
- *
- * You should have received a copy of the GNU Lesser General Public License
- * along with this program;  If not, see <http://www.gnu.org/licenses/>.
- */
-
-#include <QApplication>
-#include <QTextFormat>
-#include <QInputContext>
-#include <QInputContextPlugin>
-#include <nimf.h>
-
-class NimfInputContext : public QInputContext
-{
-   Q_OBJECT
-public:
-   NimfInputContext ();
-  ~NimfInputContext ();
-
-  virtual QString identifierName ();
-  virtual QString language       ();
-
-  virtual void    reset          ();
-  virtual void    update         ();
-  virtual bool    isComposing    () const;
-  virtual void    setFocusWidget (QWidget *w);
-  virtual bool    filterEvent    (const QEvent *event);
-
-  // nimf signal callbacks
-  static void     on_preedit_start        (NimfIM      *im,
-                                           gpointer     user_data);
-  static void     on_preedit_end          (NimfIM      *im,
-                                           gpointer     user_data);
-  static void     on_preedit_changed      (NimfIM      *im,
-                                           gpointer     user_data);
-  static void     on_commit               (NimfIM      *im,
-                                           const gchar *text,
-                                           gpointer     user_data);
-  static gboolean on_retrieve_surrounding (NimfIM      *im,
-                                           gpointer     user_data);
-  static gboolean on_delete_surrounding   (NimfIM      *im,
-                                           gint         offset,
-                                           gint         n_chars,
-                                           gpointer     user_data);
-  static void     on_beep                 (NimfIM      *im,
-                                           gpointer     user_data);
-  // settings
-  static void on_changed_reset_on_mouse_button_press (GSettings *settings,
-                                                      gchar     *key,
-                                                      gpointer   user_data);
-private:
-  NimfIM        *m_im;
-  bool           m_isComposing;
-  NimfRectangle  m_cursor_area;
-  GSettings     *m_settings;
-  gboolean       m_reset;
-};
-
-/* nimf signal callbacks */
-void
-NimfInputContext::on_preedit_start (NimfIM *im, gpointer user_data)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  NimfInputContext *context = static_cast<NimfInputContext *>(user_data);
-  context->m_isComposing = true;
-}
-
-void
-NimfInputContext::on_preedit_end (NimfIM *im, gpointer user_data)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  NimfInputContext *context = static_cast<NimfInputContext *>(user_data);
-  context->m_isComposing = false;
-}
-
-void
-NimfInputContext::on_preedit_changed (NimfIM *im, gpointer user_data)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  NimfInputContext *context = static_cast<NimfInputContext *>(user_data);
-
-  NimfPreeditAttr **preedit_attrs;
-  gchar            *str;
-  gint              cursor_pos;
-  gint              i;
-
-  nimf_im_get_preedit_string (im, &str, &preedit_attrs, &cursor_pos);
-  QString preeditText = QString::fromUtf8 (str);
-  g_free (str);
-  QList <QInputMethodEvent::Attribute> attrs;
-  // preedit text attribute
-  for (i = 0; preedit_attrs[i] != NULL; i++)
-  {
-    QTextCharFormat format;
-
-    switch (preedit_attrs[i]->type)
-    {
-      case NIMF_PREEDIT_ATTR_HIGHLIGHT:
-        format.setBackground(Qt::green);
-        format.setForeground(Qt::black);
-        break;
-      case NIMF_PREEDIT_ATTR_UNDERLINE:
-        format.setUnderlineStyle(QTextCharFormat::DashUnderline);
-        break;
-      default:
-        format.setUnderlineStyle(QTextCharFormat::DashUnderline);
-        break;
-    }
-
-    QInputMethodEvent::Attribute attr (QInputMethodEvent::TextFormat,
-                                       preedit_attrs[i]->start_index,
-                                       preedit_attrs[i]->end_index - preedit_attrs[i]->start_index,
-                                       QVariant (format));
-    attrs << attr;
-  }
-
-  nimf_preedit_attr_freev (preedit_attrs);
-
-  // cursor attribute
-  attrs << QInputMethodEvent::Attribute (QInputMethodEvent::Cursor,
-                                         cursor_pos, true, 0);
-
-  QInputMethodEvent event (preeditText, attrs);
-  context->sendEvent (event);
-}
-
-void
-NimfInputContext::on_commit (NimfIM      *im,
-                             const gchar *text,
-                             gpointer     user_data)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  NimfInputContext *context = static_cast<NimfInputContext *>(user_data);
-  QString str = QString::fromUtf8 (text);
-  QInputMethodEvent event;
-  event.setCommitString (str);
-  context->sendEvent (event);
-}
-
-gboolean
-NimfInputContext::on_retrieve_surrounding (NimfIM *im, gpointer user_data)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  QWidget *widget = qApp->focusWidget();
-
-  if (!widget)
-    return FALSE;
-
-  NimfInputContext *context = static_cast<NimfInputContext *>(user_data);
-
-  QString string = widget->inputMethodQuery (Qt::ImSurroundingText).toString ();
-  uint pos = widget->inputMethodQuery (Qt::ImCursorPosition).toUInt ();
-
-  nimf_im_set_surrounding (context->m_im,
-                           string.toUtf8().constData(), -1, pos);
-  return TRUE;
-}
-
-gboolean
-NimfInputContext::on_delete_surrounding (NimfIM   *im,
-                                         gint      offset,
-                                         gint      n_chars,
-                                         gpointer  user_data)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  QWidget *widget = qApp->focusWidget();
-
-  if (!widget)
-    return FALSE;
-
-  QInputMethodEvent event;
-  event.setCommitString ("", offset, n_chars);
-  QCoreApplication::sendEvent (widget, &event);
-
-  return TRUE;
-}
-
-void
-NimfInputContext::on_beep (NimfIM *im, gpointer user_data)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  QApplication::beep();
-}
-
-void
-NimfInputContext::on_changed_reset_on_mouse_button_press (GSettings *settings,
-                                                          gchar     *key,
-                                                          gpointer   user_data)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  NimfInputContext *context = static_cast<NimfInputContext *>(user_data);
-
-  context->m_reset = g_settings_get_boolean (settings, key);
-
-  g_message ("%d", context->m_reset);
-}
-
-NimfInputContext::NimfInputContext ()
-  : m_isComposing(false)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  m_im = nimf_im_new ();
-  m_settings = g_settings_new ("org.nimf.clients.qt4");
-  g_signal_connect (m_im, "preedit-start",
-                    G_CALLBACK (NimfInputContext::on_preedit_start), this);
-  g_signal_connect (m_im, "preedit-end",
-                    G_CALLBACK (NimfInputContext::on_preedit_end), this);
-  g_signal_connect (m_im, "preedit-changed",
-                    G_CALLBACK (NimfInputContext::on_preedit_changed), this);
-  g_signal_connect (m_im, "commit",
-                    G_CALLBACK (NimfInputContext::on_commit), this);
-  g_signal_connect (m_im, "retrieve-surrounding",
-                    G_CALLBACK (NimfInputContext::on_retrieve_surrounding),
-                    this);
-  g_signal_connect (m_im, "delete-surrounding",
-                    G_CALLBACK (NimfInputContext::on_delete_surrounding), this);
-  g_signal_connect (m_im, "beep",
-                    G_CALLBACK (NimfInputContext::on_beep), this);
-  g_signal_connect (m_settings, "changed::reset-on-mouse-button-press",
-                    G_CALLBACK (NimfInputContext::on_changed_reset_on_mouse_button_press), this);
-  g_signal_emit_by_name (m_settings, "changed::reset-on-mouse-button-press",
-                                     "reset-on-mouse-button-press");
-}
-
-NimfInputContext::~NimfInputContext ()
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  g_object_unref (m_im);
-  g_object_unref (m_settings);
-}
-
-QString
-NimfInputContext::identifierName ()
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  return QString ("nimf");
-}
-
-QString
-NimfInputContext::language ()
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  return QString ("");
-}
-
-void
-NimfInputContext::reset ()
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  nimf_im_reset (m_im);
-}
-
-void
-NimfInputContext::update ()
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  QWidget *widget = focusWidget ();
-
-  if (widget)
-  {
-    QRect  rect  = widget->inputMethodQuery(Qt::ImMicroFocus).toRect();
-    QPoint point = widget->mapToGlobal (QPoint(0,0));
-    rect.translate (point);
-
-    if (m_cursor_area.x      != rect.x ()     ||
-        m_cursor_area.y      != rect.y ()     ||
-        m_cursor_area.width  != rect.width () ||
-        m_cursor_area.height != rect.height ())
-    {
-      m_cursor_area.x      = rect.x ();
-      m_cursor_area.y      = rect.y ();
-      m_cursor_area.width  = rect.width ();
-      m_cursor_area.height = rect.height ();
-
-      nimf_im_set_cursor_location (m_im, &m_cursor_area);
-    }
-  }
-}
-
-bool
-NimfInputContext::isComposing () const
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  return m_isComposing;
-}
-
-void
-NimfInputContext::setFocusWidget (QWidget *w)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  if (!w)
-    nimf_im_focus_out (m_im);
-
-  QInputContext::setFocusWidget (w);
-
-  if (w)
-    nimf_im_focus_in (m_im);
-
-  update ();
-}
-
-bool
-NimfInputContext::filterEvent (const QEvent *event)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  gboolean         retval;
-  const QKeyEvent *key_event = static_cast<const QKeyEvent *>( event );
-  NimfEvent       *nimf_event;
-  NimfEventType    type = NIMF_EVENT_NOTHING;
-
-  switch (event->type ())
-  {
-#undef KeyPress
-    case QEvent::KeyPress:
-      type = NIMF_EVENT_KEY_PRESS;
-      break;
-#undef KeyRelease
-    case QEvent::KeyRelease:
-      type = NIMF_EVENT_KEY_RELEASE;
-      break;
-    case QEvent::MouseButtonPress:
-      if (m_reset)
-        nimf_im_reset (m_im);
-    default:
-      return false;
-  }
-
-  nimf_event = nimf_event_new (type);
-  nimf_event->key.state            = key_event->nativeModifiers  ();
-  nimf_event->key.keyval           = key_event->nativeVirtualKey ();
-  nimf_event->key.hardware_keycode = key_event->nativeScanCode   ();
-
-  retval = nimf_im_filter_event (m_im, nimf_event);
-  nimf_event_free (nimf_event);
-
-  return retval;
-}
-
-/*
- * class NimfInputContextPlugin
- */
-class NimfInputContextPlugin : public QInputContextPlugin
-{
-  Q_OBJECT
-public:
-  NimfInputContextPlugin ()
-  {
-    g_debug (G_STRLOC ": %s", G_STRFUNC);
-  }
-
-  ~NimfInputContextPlugin ()
-  {
-    g_debug (G_STRLOC ": %s", G_STRFUNC);
-  }
-
-  virtual QStringList keys () const
-  {
-    g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-    return QStringList () << "nimf";
-  }
-
-  virtual QInputContext *create (const QString &key)
-  {
-    g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-    return new NimfInputContext ();
-  }
-
-  virtual QStringList languages (const QString &key)
-  {
-    g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-    return QStringList () << "ko" << "zh" << "ja";
-  }
-
-  virtual QString displayName (const QString &key)
-  {
-    g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-    return QString ("Nimf");
-  }
-
-  virtual QString description (const QString &key)
-  {
-    g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-    return QString ("nimf Qt4 im module");
-  }
-};
-
-Q_EXPORT_PLUGIN2 (NimfInputContextPlugin, NimfInputContextPlugin)
-
-#include "im-nimf-qt4.moc"
diff --git a/modules/clients/qt4/org.nimf.clients.qt4.gschema.xml b/modules/clients/qt4/org.nimf.clients.qt4.gschema.xml
deleted file mode 100644
index 4c4b9bf..0000000
--- a/modules/clients/qt4/org.nimf.clients.qt4.gschema.xml
+++ /dev/null
@@ -1,16 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<schemalist>
-  <schema id="org.nimf.clients.qt4"
-          path="/org/nimf/clients/qt4/" gettext-domain="nimf">
-    <key type="s" name="hidden-schema-name">
-      <default l10n="messages">'Qt4'</default>
-      <summary>schema name for nimf-settings</summary>
-      <description>This key is intended for nimf-settings.</description>
-    </key>
-    <key type="b" name="reset-on-mouse-button-press">
-      <default>true</default>
-      <summary>Reset when clicking the mouse button</summary>
-      <description>Reset when clicking the mouse button</description>
-    </key>
-  </schema>
-</schemalist>
diff --git a/modules/engines/nimf-anthy/nimf-anthy.c b/modules/engines/nimf-anthy/nimf-anthy.c
index e0b9019..cb43aa1 100644
--- a/modules/engines/nimf-anthy/nimf-anthy.c
+++ b/modules/engines/nimf-anthy/nimf-anthy.c
@@ -3,7 +3,7 @@
  * nimf-anthy.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2016-2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2016-2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -1572,14 +1572,14 @@ nimf_anthy_init (NimfAnthy *anthy)
   g_strfreev (hiragana_keys);
   g_strfreev (katakana_keys);
 
-  g_signal_connect (anthy->settings, "changed::hiragana-keys",
-                    G_CALLBACK (on_changed_keys), anthy);
-  g_signal_connect (anthy->settings, "changed::katakana-keys",
-                    G_CALLBACK (on_changed_keys), anthy);
-  g_signal_connect (anthy->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), anthy);
-  g_signal_connect (anthy->settings, "changed::get-n-input-mode-list",
-                    G_CALLBACK (on_changed_n_input_mode), anthy);
+  g_signal_connect_data (anthy->settings, "changed::hiragana-keys",
+          G_CALLBACK (on_changed_keys), anthy, NULL, G_CONNECT_AFTER);
+  g_signal_connect_data (anthy->settings, "changed::katakana-keys",
+          G_CALLBACK (on_changed_keys), anthy, NULL, G_CONNECT_AFTER);
+  g_signal_connect_data (anthy->settings, "changed::get-method-infos",
+          G_CALLBACK (on_changed_method), anthy, NULL, G_CONNECT_AFTER);
+  g_signal_connect_data (anthy->settings, "changed::get-n-input-mode-list",
+          G_CALLBACK (on_changed_n_input_mode), anthy, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-libhangul/nimf-libhangul.c b/modules/engines/nimf-libhangul/nimf-libhangul.c
index 21d9f7d..e6d9cb2 100644
--- a/modules/engines/nimf-libhangul/nimf-libhangul.c
+++ b/modules/engines/nimf-libhangul/nimf-libhangul.c
@@ -3,7 +3,7 @@
  * nimf-libhangul.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2015-2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2015-2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -47,7 +47,7 @@ struct _NimfLibhangul
   NimfKey           **hanja_keys;
   GSettings          *settings;
   gboolean            is_double_consonant_rule;
-  gboolean            is_auto_reordering;
+  gboolean            auto_reordering;
   gchar              *method;
   /* workaround: ignore reset called by commit callback in application */
   gboolean            ignore_reset_in_commit_cb;
@@ -612,35 +612,36 @@ nimf_libhangul_filter_event (NimfEngine    *engine,
   gchar *new_preedit = g_ucs4_to_utf8 (ucs_preedit, -1, NULL, NULL, NULL);
   nimf_libhangul_update_preedit (engine, target, new_preedit);
 
-  return retval;
-}
-
-static bool
-on_libhangul_transition (HangulInputContext *ic,
-                         ucschar             c,
-                         const ucschar      *preedit,
-                         void               *data)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
-
-  if ((hangul_is_choseong (c) && (hangul_ic_has_jungseong (ic) ||
-                                  hangul_ic_has_jongseong (ic))) ||
-      (hangul_is_jungseong (c) && hangul_ic_has_jongseong (ic)))
-    return false;
-
-  return true;
-}
-
-static void
-nimf_libhangul_update_transition_cb (NimfLibhangul *hangul)
-{
-  g_debug (G_STRLOC ": %s", G_STRFUNC);
+  if (!retval)
+  {
+    switch (keyval)
+    {
+      case '_':
+      case '-':
+      case '+':
+      case '=':
+      case '{':
+      case '[':
+      case '}':
+      case ']':
+      case ':':
+      case ';':
+      case '\"':
+      case '\'':
+      case '<':
+      case ',':
+      case '>':
+      case '.':
+      case '?':
+      case '/':
+        nimf_libhangul_emit_commit (engine, target, (char *) &keyval);
+        retval = TRUE;
+      default:
+        break;
+    }
+  }
 
-  if ((g_strcmp0 (hangul->method, "2") == 0) && !hangul->is_auto_reordering)
-    hangul_ic_connect_callback (hangul->context, "transition",
-                                on_libhangul_transition, NULL);
-  else
-    hangul_ic_connect_callback (hangul->context, "transition", NULL, NULL);
+  return retval;
 }
 
 static void
@@ -653,7 +654,8 @@ on_changed_method (GSettings     *settings,
   g_free (hangul->method);
   hangul->method = g_settings_get_string (settings, key);
   hangul_ic_select_keyboard (hangul->context, hangul->method);
-  nimf_libhangul_update_transition_cb (hangul);
+  hangul_ic_set_option (hangul->context, HANGUL_IC_OPTION_AUTO_REORDER,
+                        hangul->auto_reordering);
 }
 
 static void
@@ -663,8 +665,9 @@ on_changed_auto_reordering (GSettings     *settings,
 {
   g_debug (G_STRLOC ": %s", G_STRFUNC);
 
-  hangul->is_auto_reordering = g_settings_get_boolean (settings, key);
-  nimf_libhangul_update_transition_cb (hangul);
+  hangul->auto_reordering = g_settings_get_boolean (settings, key);
+  hangul_ic_set_option (hangul->context, HANGUL_IC_OPTION_AUTO_REORDER,
+                        hangul->auto_reordering);
 }
 
 static void
@@ -716,7 +719,7 @@ nimf_libhangul_init (NimfLibhangul *hangul)
   hangul->method = g_settings_get_string (hangul->settings, "get-method-infos");
   hangul->is_double_consonant_rule =
     g_settings_get_boolean (hangul->settings, "double-consonant-rule");
-  hangul->is_auto_reordering =
+  hangul->auto_reordering =
     g_settings_get_boolean (hangul->settings, "auto-reordering");
   hangul->ignore_reset_in_commit_cb =
     g_settings_get_boolean (hangul->settings, "ignore-reset-in-commit-cb");
@@ -741,18 +744,19 @@ nimf_libhangul_init (NimfLibhangul *hangul)
 
   g_strfreev (hanja_keys);
 
-  nimf_libhangul_update_transition_cb (hangul);
-
-  g_signal_connect (hangul->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), hangul);
-  g_signal_connect (hangul->settings, "changed::hanja-keys",
-                    G_CALLBACK (on_changed_keys), hangul);
-  g_signal_connect (hangul->settings, "changed::double-consonant-rule",
-                    G_CALLBACK (on_changed_double_consonant_rule), hangul);
-  g_signal_connect (hangul->settings, "changed::auto-reordering",
-                    G_CALLBACK (on_changed_auto_reordering), hangul);
-  g_signal_connect (hangul->settings, "changed::ignore-reset-in-commit-cb",
-                    G_CALLBACK (on_changed_ignore_reset_in_commit_cb), hangul);
+  hangul_ic_set_option (hangul->context, HANGUL_IC_OPTION_AUTO_REORDER,
+                        hangul->auto_reordering);
+
+  g_signal_connect_data (hangul->settings, "changed::get-method-infos",
+    G_CALLBACK (on_changed_method), hangul, NULL, G_CONNECT_AFTER);
+  g_signal_connect_data (hangul->settings, "changed::hanja-keys",
+    G_CALLBACK (on_changed_keys), hangul, NULL, G_CONNECT_AFTER);
+  g_signal_connect_data (hangul->settings, "changed::double-consonant-rule",
+    G_CALLBACK (on_changed_double_consonant_rule), hangul, NULL, G_CONNECT_AFTER);
+  g_signal_connect_data (hangul->settings, "changed::auto-reordering",
+    G_CALLBACK (on_changed_auto_reordering), hangul, NULL, G_CONNECT_AFTER);
+  g_signal_connect_data (hangul->settings, "changed::ignore-reset-in-commit-cb",
+    G_CALLBACK (on_changed_ignore_reset_in_commit_cb), hangul, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-am.c b/modules/engines/nimf-m17n/nimf-m17n-am.c
index 02c1a3b..2d56766 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-am.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-am.c
@@ -3,7 +3,7 @@
  * nimf-m17n-am.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_am_init (NimfM17nAm *am)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ar.c b/modules/engines/nimf-m17n/nimf-m17n-ar.c
index 24232b6..7e2b636 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ar.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ar.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ar.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ar_init (NimfM17nAr *ar)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-as.c b/modules/engines/nimf-m17n/nimf-m17n-as.c
index 339257e..0f6fbca 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-as.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-as.c
@@ -3,7 +3,7 @@
  * nimf-m17n-as.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_as_init (NimfM17nAs *as)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ath.c b/modules/engines/nimf-m17n/nimf-m17n-ath.c
index 405926f..a771f1b 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ath.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ath.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ath.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ath_init (NimfM17nAth *ath)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-be.c b/modules/engines/nimf-m17n/nimf-m17n-be.c
index feee9fa..2491e12 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-be.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-be.c
@@ -3,7 +3,7 @@
  * nimf-m17n-be.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_be_init (NimfM17nBe *be)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-bla.c b/modules/engines/nimf-m17n/nimf-m17n-bla.c
index 4e4bbe0..65ab4d7 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-bla.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-bla.c
@@ -3,7 +3,7 @@
  * nimf-m17n-bla.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_bla_init (NimfM17nBla *bla)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-bn.c b/modules/engines/nimf-m17n/nimf-m17n-bn.c
index 7f54253..9cdaeab 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-bn.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-bn.c
@@ -3,7 +3,7 @@
  * nimf-m17n-bn.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_bn_init (NimfM17nBn *bn)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-bo.c b/modules/engines/nimf-m17n/nimf-m17n-bo.c
index 0735648..88ace0b 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-bo.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-bo.c
@@ -3,7 +3,7 @@
  * nimf-m17n-bo.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_bo_init (NimfM17nBo *bo)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-cmc.c b/modules/engines/nimf-m17n/nimf-m17n-cmc.c
index 961af02..e1659d5 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-cmc.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-cmc.c
@@ -3,7 +3,7 @@
  * nimf-m17n-cmc.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_cmc_init (NimfM17nCmc *cmc)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-cr.c b/modules/engines/nimf-m17n/nimf-m17n-cr.c
index f7e2a28..a3916d1 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-cr.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-cr.c
@@ -3,7 +3,7 @@
  * nimf-m17n-cr.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_cr_init (NimfM17nCr *cr)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-cs.c b/modules/engines/nimf-m17n/nimf-m17n-cs.c
index 5949142..44a5b0e 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-cs.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-cs.c
@@ -3,7 +3,7 @@
  * nimf-m17n-cs.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_cs_init (NimfM17nCs *cs)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-da.c b/modules/engines/nimf-m17n/nimf-m17n-da.c
index 1e69f53..70c684e 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-da.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-da.c
@@ -3,7 +3,7 @@
  * nimf-m17n-da.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_da_init (NimfM17nDa *da)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-dv.c b/modules/engines/nimf-m17n/nimf-m17n-dv.c
index 4b07a4a..bb9430a 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-dv.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-dv.c
@@ -3,7 +3,7 @@
  * nimf-m17n-dv.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_dv_init (NimfM17nDv *dv)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-el.c b/modules/engines/nimf-m17n/nimf-m17n-el.c
index 408b010..5fc3cbc 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-el.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-el.c
@@ -3,7 +3,7 @@
  * nimf-m17n-el.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_el_init (NimfM17nEl *el)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-eo.c b/modules/engines/nimf-m17n/nimf-m17n-eo.c
index a411c16..082456c 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-eo.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-eo.c
@@ -3,7 +3,7 @@
  * nimf-m17n-eo.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_eo_init (NimfM17nEo *eo)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-fa.c b/modules/engines/nimf-m17n/nimf-m17n-fa.c
index 59676e4..e36ba7c 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-fa.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-fa.c
@@ -3,7 +3,7 @@
  * nimf-m17n-fa.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_fa_init (NimfM17nFa *fa)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-fr.c b/modules/engines/nimf-m17n/nimf-m17n-fr.c
index c431495..53db099 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-fr.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-fr.c
@@ -3,7 +3,7 @@
  * nimf-m17n-fr.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_fr_init (NimfM17nFr *fr)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-grc.c b/modules/engines/nimf-m17n/nimf-m17n-grc.c
index d66c3c7..142d989 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-grc.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-grc.c
@@ -3,7 +3,7 @@
  * nimf-m17n-grc.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_grc_init (NimfM17nGrc *grc)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-gu.c b/modules/engines/nimf-m17n/nimf-m17n-gu.c
index 69f8dd6..9c6aecc 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-gu.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-gu.c
@@ -3,7 +3,7 @@
  * nimf-m17n-gu.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_gu_init (NimfM17nGu *gu)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-he.c b/modules/engines/nimf-m17n/nimf-m17n-he.c
index a273d63..a682e1d 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-he.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-he.c
@@ -3,7 +3,7 @@
  * nimf-m17n-he.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_he_init (NimfM17nHe *he)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-hi.c b/modules/engines/nimf-m17n/nimf-m17n-hi.c
index 03b275b..87a1fc4 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-hi.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-hi.c
@@ -3,7 +3,7 @@
  * nimf-m17n-hi.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_hi_init (NimfM17nHi *hi)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-hr.c b/modules/engines/nimf-m17n/nimf-m17n-hr.c
index fa49741..b799073 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-hr.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-hr.c
@@ -3,7 +3,7 @@
  * nimf-m17n-hr.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_hr_init (NimfM17nHr *hr)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-hu.c b/modules/engines/nimf-m17n/nimf-m17n-hu.c
index a168a7e..d09fb95 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-hu.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-hu.c
@@ -3,7 +3,7 @@
  * nimf-m17n-hu.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_hu_init (NimfM17nHu *hu)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-hy.c b/modules/engines/nimf-m17n/nimf-m17n-hy.c
index 9daf653..6c81b7b 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-hy.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-hy.c
@@ -3,7 +3,7 @@
  * nimf-m17n-hy.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_hy_init (NimfM17nHy *hy)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ii.c b/modules/engines/nimf-m17n/nimf-m17n-ii.c
index f678149..e5f3f30 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ii.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ii.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ii.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ii_init (NimfM17nIi *ii)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-iu.c b/modules/engines/nimf-m17n/nimf-m17n-iu.c
index 8c443fa..65d6e09 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-iu.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-iu.c
@@ -3,7 +3,7 @@
  * nimf-m17n-iu.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_iu_init (NimfM17nIu *iu)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ka.c b/modules/engines/nimf-m17n/nimf-m17n-ka.c
index 27757a1..be60e37 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ka.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ka.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ka.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ka_init (NimfM17nKa *ka)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-kk.c b/modules/engines/nimf-m17n/nimf-m17n-kk.c
index 2cf7e9a..92480d1 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-kk.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-kk.c
@@ -3,7 +3,7 @@
  * nimf-m17n-kk.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_kk_init (NimfM17nKk *kk)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-km.c b/modules/engines/nimf-m17n/nimf-m17n-km.c
index 25afedd..a442d72 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-km.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-km.c
@@ -3,7 +3,7 @@
  * nimf-m17n-km.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_km_init (NimfM17nKm *km)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-kn.c b/modules/engines/nimf-m17n/nimf-m17n-kn.c
index 5d31c4c..ce11568 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-kn.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-kn.c
@@ -3,7 +3,7 @@
  * nimf-m17n-kn.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_kn_init (NimfM17nKn *kn)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ks.c b/modules/engines/nimf-m17n/nimf-m17n-ks.c
index 372a1ed..e834cbe 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ks.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ks.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ks.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ks_init (NimfM17nKs *ks)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-lo.c b/modules/engines/nimf-m17n/nimf-m17n-lo.c
index b410955..50d8666 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-lo.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-lo.c
@@ -3,7 +3,7 @@
  * nimf-m17n-lo.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_lo_init (NimfM17nLo *lo)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-mai.c b/modules/engines/nimf-m17n/nimf-m17n-mai.c
index 263cbf8..017a882 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-mai.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-mai.c
@@ -3,7 +3,7 @@
  * nimf-m17n-mai.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_mai_init (NimfM17nMai *mai)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ml.c b/modules/engines/nimf-m17n/nimf-m17n-ml.c
index ee4687c..f0fd8a9 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ml.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ml.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ml.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ml_init (NimfM17nMl *ml)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-mr.c b/modules/engines/nimf-m17n/nimf-m17n-mr.c
index 575d644..33ccde8 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-mr.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-mr.c
@@ -3,7 +3,7 @@
  * nimf-m17n-mr.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_mr_init (NimfM17nMr *mr)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-my.c b/modules/engines/nimf-m17n/nimf-m17n-my.c
index 39fb615..bfb01cf 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-my.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-my.c
@@ -3,7 +3,7 @@
  * nimf-m17n-my.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_my_init (NimfM17nMy *my)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ne.c b/modules/engines/nimf-m17n/nimf-m17n-ne.c
index 757086c..7679733 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ne.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ne.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ne.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ne_init (NimfM17nNe *ne)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-nsk.c b/modules/engines/nimf-m17n/nimf-m17n-nsk.c
index 95182f2..fae65d6 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-nsk.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-nsk.c
@@ -3,7 +3,7 @@
  * nimf-m17n-nsk.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_nsk_init (NimfM17nNsk *nsk)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-oj.c b/modules/engines/nimf-m17n/nimf-m17n-oj.c
index 51a6a5d..01a17b8 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-oj.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-oj.c
@@ -3,7 +3,7 @@
  * nimf-m17n-oj.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_oj_init (NimfM17nOj *oj)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-or.c b/modules/engines/nimf-m17n/nimf-m17n-or.c
index 47d4437..9f0652d 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-or.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-or.c
@@ -3,7 +3,7 @@
  * nimf-m17n-or.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_or_init (NimfM17nOr *or)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-pa.c b/modules/engines/nimf-m17n/nimf-m17n-pa.c
index 474b5b2..b798d01 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-pa.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-pa.c
@@ -3,7 +3,7 @@
  * nimf-m17n-pa.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_pa_init (NimfM17nPa *pa)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ps.c b/modules/engines/nimf-m17n/nimf-m17n-ps.c
index a28e677..4589708 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ps.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ps.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ps.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ps_init (NimfM17nPs *ps)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ru.c b/modules/engines/nimf-m17n/nimf-m17n-ru.c
index 0b91db1..2d6f6bf 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ru.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ru.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ru.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ru_init (NimfM17nRu *ru)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-sa.c b/modules/engines/nimf-m17n/nimf-m17n-sa.c
index b3d7946..e91bcba 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-sa.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-sa.c
@@ -3,7 +3,7 @@
  * nimf-m17n-sa.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_sa_init (NimfM17nSa *sa)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-sd.c b/modules/engines/nimf-m17n/nimf-m17n-sd.c
index 1457e11..fd96cea 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-sd.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-sd.c
@@ -3,7 +3,7 @@
  * nimf-m17n-sd.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_sd_init (NimfM17nSd *sd)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-si.c b/modules/engines/nimf-m17n/nimf-m17n-si.c
index a5b070f..82a73a9 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-si.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-si.c
@@ -3,7 +3,7 @@
  * nimf-m17n-si.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_si_init (NimfM17nSi *si)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-sk.c b/modules/engines/nimf-m17n/nimf-m17n-sk.c
index 4e39a7d..6b308a4 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-sk.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-sk.c
@@ -3,7 +3,7 @@
  * nimf-m17n-sk.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_sk_init (NimfM17nSk *sk)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-sr.c b/modules/engines/nimf-m17n/nimf-m17n-sr.c
index dfd9d80..be20d83 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-sr.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-sr.c
@@ -3,7 +3,7 @@
  * nimf-m17n-sr.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_sr_init (NimfM17nSr *sr)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-sv.c b/modules/engines/nimf-m17n/nimf-m17n-sv.c
index 68dc43e..6541943 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-sv.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-sv.c
@@ -3,7 +3,7 @@
  * nimf-m17n-sv.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_sv_init (NimfM17nSv *sv)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-t.c b/modules/engines/nimf-m17n/nimf-m17n-t.c
index dc0a10e..79a21dd 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-t.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-t.c
@@ -3,7 +3,7 @@
  * nimf-m17n-t.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_t_init (NimfM17nT *t)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ta.c b/modules/engines/nimf-m17n/nimf-m17n-ta.c
index d3ad23b..7c62c99 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ta.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ta.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ta.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ta_init (NimfM17nTa *ta)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-tai.c b/modules/engines/nimf-m17n/nimf-m17n-tai.c
index 9c0726b..9301892 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-tai.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-tai.c
@@ -3,7 +3,7 @@
  * nimf-m17n-tai.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_tai_init (NimfM17nTai *tai)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-te.c b/modules/engines/nimf-m17n/nimf-m17n-te.c
index 6501774..4b54e94 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-te.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-te.c
@@ -3,7 +3,7 @@
  * nimf-m17n-te.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_te_init (NimfM17nTe *te)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-th.c b/modules/engines/nimf-m17n/nimf-m17n-th.c
index 3c8d264..078799d 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-th.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-th.c
@@ -3,7 +3,7 @@
  * nimf-m17n-th.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_th_init (NimfM17nTh *th)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ug.c b/modules/engines/nimf-m17n/nimf-m17n-ug.c
index 7ca81f2..ed72d0a 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ug.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ug.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ug.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ug_init (NimfM17nUg *ug)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-uk.c b/modules/engines/nimf-m17n/nimf-m17n-uk.c
index d3bafc1..77400bc 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-uk.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-uk.c
@@ -3,7 +3,7 @@
  * nimf-m17n-uk.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_uk_init (NimfM17nUk *uk)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-ur.c b/modules/engines/nimf-m17n/nimf-m17n-ur.c
index 1c6d550..f3e7904 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-ur.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-ur.c
@@ -3,7 +3,7 @@
  * nimf-m17n-ur.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_ur_init (NimfM17nUr *ur)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-uz.c b/modules/engines/nimf-m17n/nimf-m17n-uz.c
index 9dacfc0..6d4d3a1 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-uz.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-uz.c
@@ -3,7 +3,7 @@
  * nimf-m17n-uz.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_uz_init (NimfM17nUz *uz)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-vi.c b/modules/engines/nimf-m17n/nimf-m17n-vi.c
index 097ff35..8ac850f 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-vi.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-vi.c
@@ -3,7 +3,7 @@
  * nimf-m17n-vi.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_vi_init (NimfM17nVi *vi)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-m17n/nimf-m17n-yi.c b/modules/engines/nimf-m17n/nimf-m17n-yi.c
index 86a0f94..b852270 100644
--- a/modules/engines/nimf-m17n/nimf-m17n-yi.c
+++ b/modules/engines/nimf-m17n/nimf-m17n-yi.c
@@ -3,7 +3,7 @@
  * nimf-m17n-yi.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2019,2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -58,8 +58,8 @@ nimf_m17n_yi_init (NimfM17nYi *yi)
 
   nimf_m17n_open_im (m17n);
 
-  g_signal_connect (m17n->settings, "changed::get-method-infos",
-                    G_CALLBACK (on_changed_method), m17n);
+  g_signal_connect_data (m17n->settings, "changed::get-method-infos",
+                  G_CALLBACK (on_changed_method), m17n, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/engines/nimf-rime/nimf-rime.c b/modules/engines/nimf-rime/nimf-rime.c
index 52c952e..1e2e255 100644
--- a/modules/engines/nimf-rime/nimf-rime.c
+++ b/modules/engines/nimf-rime/nimf-rime.c
@@ -3,7 +3,7 @@
  * nimf-rime.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2016-2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2016-2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -432,8 +432,8 @@ nimf_rime_init (NimfRime *rime)
   rime->session_id = RimeCreateSession();
   RimeSetOption (rime->session_id, "simplification", rime->is_simplified);
 
-  g_signal_connect (rime->settings, "changed::simplification",
-                    G_CALLBACK (on_changed_simplification), rime);
+  g_signal_connect_data (rime->settings, "changed::simplification",
+          G_CALLBACK (on_changed_simplification), rime, NULL, G_CONNECT_AFTER);
 }
 
 static void
diff --git a/modules/services/indicator/nimf-indicator.c b/modules/services/indicator/nimf-indicator.c
index eb4bffc..64c8296 100644
--- a/modules/services/indicator/nimf-indicator.c
+++ b/modules/services/indicator/nimf-indicator.c
@@ -3,7 +3,7 @@
  * nimf-indicator.c
  * This file is part of Nimf.
  *
- * Copyright (C) 2015-2019 Hodong Kim <cogniti@gmail.com>
+ * Copyright (C) 2015-2020 Hodong Kim <cogniti@gmail.com>
  *
  * Nimf is free software: you can redistribute it and/or modify it
  * under the terms of the GNU Lesser General Public License as published
@@ -119,7 +119,7 @@ on_menu_about (GSimpleAction *action,
       "artists",            artists,
       "authors",            authors,
       "comments",           _("Nimf is an input method framework"),
-      "copyright",          _("Copyright (c) 2015-2019 Hodong Kim"),
+      "copyright",          _("Copyright (c) 2015-2020 Hodong Kim"),
       "documenters",        documenters,
       "license-type",       GTK_LICENSE_LGPL_3_0,
       "logo-icon-name",     "nimf-logo",
diff --git a/nimf.spec b/nimf.spec
index b94eeb1..eeacb9c 100644
--- a/nimf.spec
+++ b/nimf.spec
@@ -1,6 +1,6 @@
 Name:     nimf
 Summary:  An input method framework
-Version:  2019.08.14
+Version:  2020.04.28
 Release:  1%{?dist}
 License:  LGPLv3+
 Group:    User Interface/Desktops
@@ -15,14 +15,12 @@ BuildRequires: intltool >= 0.50.1
 BuildRequires: gtk3-devel
 BuildRequires: gtk2-devel
 %if 0%{?is_opensuse}
-BuildRequires: libqt4-devel
 BuildRequires: libqt5-qtbase-devel
 BuildRequires: libQt5Gui-private-headers-devel
 BuildRequires: libappindicator3-devel
 BuildRequires: rsvg-view
 BuildRequires: noto-sans-cjk-fonts
 %else
-BuildRequires: qt4-devel
 BuildRequires: qt5-qtbase-devel
 BuildRequires: qt5-qtbase-private-devel
 BuildRequires: libappindicator-gtk3-devel
@@ -132,7 +130,6 @@ fi
 %{_libdir}/gtk-3.0/*
 %{_libdir}/libnimf.so.*
 %{_libdir}/nimf/*
-%{_libdir}/qt4/*
 %{_libdir}/qt5/*
 %{_datadir}/applications/*
 %{_datadir}/glib-2.0/*
@@ -149,5 +146,5 @@ fi
 %{_libdir}/pkgconfig/*
 
 %changelog
-* Wed Aug 14 2019 Hodong Kim <cogniti@gmail.com> - 2019.08.14-1
-- See https://gitlab.com/nimf-i18n/nimf/blob/master/debian/changelog
+* Tue Apr 28 2020 Hodong Kim <cogniti@gmail.com> - 2020.04.28-1
+- See https://www.nimfsoft.com
diff --git a/po/POTFILES.in b/po/POTFILES.in
index 0381816..a952ca9 100644
--- a/po/POTFILES.in
+++ b/po/POTFILES.in
@@ -13,7 +13,6 @@ modules/services/indicator/nimf-indicator.c
 [type: gettext/gsettings]bin/nimf-settings/org.nimf.settings.gschema.xml
 [type: gettext/gsettings]libnimf/org.nimf.gschema.xml
 [type: gettext/gsettings]modules/clients/gtk/org.nimf.clients.gtk.gschema.xml
-[type: gettext/gsettings]modules/clients/qt4/org.nimf.clients.qt4.gschema.xml
 [type: gettext/gsettings]modules/clients/qt5/org.nimf.clients.qt5.gschema.xml
 [type: gettext/gsettings]modules/engines/nimf-anthy/org.nimf.engines.nimf-anthy.gschema.xml
 [type: gettext/gsettings]modules/engines/nimf-libhangul/org.nimf.engines.nimf-libhangul.gschema.xml
diff --git a/po/de.po b/po/de.po
index 93219c3..53f1e9b 100644
--- a/po/de.po
+++ b/po/de.po
@@ -1,7 +1,7 @@
 # German translation for Nimf
-# Copyright (C) 2015-2019 Hodong Kim <cogniti@gmail.com>
+# Copyright (C) 2015-2020 Hodong Kim <cogniti@gmail.com>
 # This file is distributed under the same license as the Nimf project.
-# Hodong Kim <cogniti@gmail.com>, 2015-2019.
+# Hodong Kim <cogniti@gmail.com>, 2015-2020.
 # Max Neupert <abonnements@revolwear.com>, 2017.
 #
 #, fuzzy
@@ -10,7 +10,7 @@ msgstr ""
 "Project-Id-Version: nimf\n"
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: 2019-07-03 17:54+0900\n"
-"PO-Revision-Date: 2019-07-03 17:55+0900\n"
+"PO-Revision-Date: 2020-04-28 22:12+0900\n"
 "Last-Translator: Max Neupert <abonnements@revolwear.com>\n"
 "Language-Team: German\n"
 "Language: de\n"
@@ -168,7 +168,6 @@ msgstr ""
 
 #: ../libnimf/org.nimf.gschema.xml.h:2
 #: ../modules/clients/gtk/org.nimf.clients.gtk.gschema.xml.h:2
-#: ../modules/clients/qt4/org.nimf.clients.qt4.gschema.xml.h:2
 #: ../modules/clients/qt5/org.nimf.clients.qt5.gschema.xml.h:2
 #: ../modules/engines/nimf-anthy/org.nimf.engines.nimf-anthy.gschema.xml.h:2
 #: ../modules/engines/nimf-libhangul/org.nimf.engines.nimf-libhangul.gschema.xml.h:2
@@ -186,7 +185,6 @@ msgstr "nimf-settings Schema name"
 
 #: ../libnimf/org.nimf.gschema.xml.h:3
 #: ../modules/clients/gtk/org.nimf.clients.gtk.gschema.xml.h:3
-#: ../modules/clients/qt4/org.nimf.clients.qt4.gschema.xml.h:3
 #: ../modules/clients/qt5/org.nimf.clients.qt5.gschema.xml.h:3
 #: ../modules/engines/nimf-anthy/org.nimf.engines.nimf-anthy.gschema.xml.h:3
 #: ../modules/engines/nimf-libhangul/org.nimf.engines.nimf-libhangul.gschema.xml.h:3
@@ -275,15 +273,10 @@ msgstr ""
 "verhindert Fehler in vielen Anwendungen"
 
 #: ../modules/clients/gtk/org.nimf.clients.gtk.gschema.xml.h:6
-#: ../modules/clients/qt4/org.nimf.clients.qt4.gschema.xml.h:4
 #: ../modules/clients/qt5/org.nimf.clients.qt5.gschema.xml.h:4
 msgid "Reset when clicking the mouse button"
 msgstr "Zurücksetzen bei Mausklick"
 
-#: ../modules/clients/qt4/org.nimf.clients.qt4.gschema.xml.h:1
-msgid "'Qt4'"
-msgstr ""
-
 #: ../modules/clients/qt5/org.nimf.clients.qt5.gschema.xml.h:1
 msgid "'Qt5'"
 msgstr ""
diff --git a/po/ko.po b/po/ko.po
index abdc976..231912a 100644
--- a/po/ko.po
+++ b/po/ko.po
@@ -1,7 +1,7 @@
 # Korean translation for Nimf
-# Copyright (C) 2015-2019 Hodong Kim <cogniti@gmail.com>
+# Copyright (C) 2015-2020 Hodong Kim <cogniti@gmail.com>
 # This file is distributed under the same license as the Nimf project.
-# Hodong Kim <cogniti@gmail.com>, 2015-2019.
+# Hodong Kim <cogniti@gmail.com>, 2015-2020.
 #
 #, fuzzy
 msgid ""
@@ -9,7 +9,7 @@ msgstr ""
 "Project-Id-Version: nimf\n"
 "Report-Msgid-Bugs-To: \n"
 "POT-Creation-Date: 2019-07-03 17:54+0900\n"
-"PO-Revision-Date: 2019-07-03 19:04+0900\n"
+"PO-Revision-Date: 2020-04-28 22:12+0900\n"
 "Last-Translator: Hodong Kim <cogniti@gmail.com>\n"
 "Language-Team: Hodong Kim <cogniti@gmail.com>\n"
 "Language: ko\n"
@@ -167,7 +167,6 @@ msgstr "'님프'"
 
 #: ../libnimf/org.nimf.gschema.xml.h:2
 #: ../modules/clients/gtk/org.nimf.clients.gtk.gschema.xml.h:2
-#: ../modules/clients/qt4/org.nimf.clients.qt4.gschema.xml.h:2
 #: ../modules/clients/qt5/org.nimf.clients.qt5.gschema.xml.h:2
 #: ../modules/engines/nimf-anthy/org.nimf.engines.nimf-anthy.gschema.xml.h:2
 #: ../modules/engines/nimf-libhangul/org.nimf.engines.nimf-libhangul.gschema.xml.h:2
@@ -185,7 +184,6 @@ msgstr "nimf-settings 를 위한 스키마 이름"
 
 #: ../libnimf/org.nimf.gschema.xml.h:3
 #: ../modules/clients/gtk/org.nimf.clients.gtk.gschema.xml.h:3
-#: ../modules/clients/qt4/org.nimf.clients.qt4.gschema.xml.h:3
 #: ../modules/clients/qt5/org.nimf.clients.qt5.gschema.xml.h:3
 #: ../modules/engines/nimf-anthy/org.nimf.engines.nimf-anthy.gschema.xml.h:3
 #: ../modules/engines/nimf-libhangul/org.nimf.engines.nimf-libhangul.gschema.xml.h:3
@@ -280,15 +278,10 @@ msgstr "모든 키 이벤트를 전달하기 전에 그것들을 투과시킵니
 " 이것은 여러 응용 프로그램의 버그를 회피합니다."
 
 #: ../modules/clients/gtk/org.nimf.clients.gtk.gschema.xml.h:6
-#: ../modules/clients/qt4/org.nimf.clients.qt4.gschema.xml.h:4
 #: ../modules/clients/qt5/org.nimf.clients.qt5.gschema.xml.h:4
 msgid "Reset when clicking the mouse button"
 msgstr "마우스 버튼을 클릭할 때 리셋합니다"
 
-#: ../modules/clients/qt4/org.nimf.clients.qt4.gschema.xml.h:1
-msgid "'Qt4'"
-msgstr ""
-
 #: ../modules/clients/qt5/org.nimf.clients.qt5.gschema.xml.h:1
 msgid "'Qt5'"
 msgstr ""
